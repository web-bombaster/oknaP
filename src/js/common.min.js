
document.addEventListener(
	"DOMContentLoaded", () => {
		function loadData() {
	return new Promise((resolve, reject) => {
	  	// setTimeout не является частью решения
	  	// Код ниже должен быть заменен на логику подходящую для решения вашей задачи
		setTimeout(resolve, 100);
	})
};

loadData()
	.then(() => {
		let preloaderEl = document.getElementById('preloader');
		preloaderEl.classList.add('hidden');
		preloaderEl.classList.remove('visible');
	});// функция будет перемещать блок в указанное место при определенной ширине экрана

let moving = function () {

    const windowWidth = window.innerWidth; // ширина экрана
    // console.log(windowWidth);

    // перемещение меню
    if (windowWidth <= 1024) {
        document.querySelector('.mobile-menu__box').prepend(document.querySelector('.nav-menu'));
    } else {
        document.querySelector('.nav .container').append(document.querySelector('.nav-menu'));
    };

        // перемещение меню
        if (windowWidth <= 660) {
            document.querySelector('.footer__bottom').prepend(document.querySelector('.not-offer'));
        } else {
            document.querySelector('.footer__col.text').append(document.querySelector('.not-offer'));
        };




};

moving();
window.addEventListener('resize', moving);const headerFixed = () => {
    if (document.documentElement.clientWidth <= 1024) {
        const heightHeader = document.querySelector('.header').offsetHeight; // высота хедера
        document.body.style.paddingTop = heightHeader + 'px';
    } else {
        document.body.style.paddingTop = 0;
    };
};

headerFixed();
// запускаем headerFixed при ресайзе
window.addEventListener("resize", headerFixed);function mobileMenu() {
	if (document.querySelector(".jsMobileMenuBtnToggle")) {
		const menuBtn = document.querySelector(".jsMobileMenuBtnToggle");
		const body = document.querySelector("body");
		const menu = document.querySelector(".mobile-menu");

		function mobileMenuOpen() {
			menu.classList.add("toggle");
			body.classList.add("toggle");
			menuBtn.classList.add("toggle");
		}

		function mobileMenuClose() {
			menu.classList.remove("toggle");
			body.classList.remove("toggle");
			menuBtn.classList.remove("toggle");
		}

		// Показать / скрыть мобильное меню
		function menuToggle() {
			if (!menuBtn.classList.contains("toggle")) {
				mobileMenuOpen();
			} else {
				mobileMenuClose();
			}
		}

		menuBtn.addEventListener("click", menuToggle);

		window.addEventListener(
			"resize",
			function () {
				mobileMenuClose();
			},
			true
		);

		// Закрываем мобильное меню по клику вне его
		function closeMobileMenu() {
			document.addEventListener("click", function (e) {
				const target = e.target;
				const its_menu = target == menu || menu.contains(target);
				const its_btnMenu = target == menuBtn || menuBtn.contains;

				if (!its_menu && !its_btnMenu) {
					mobileMenuClose();
				}
			});
		}

		closeMobileMenu();
	}
}

mobileMenu();
if (document.querySelector(".jsMobileMenuBtnToggle")) {
	let menuPanelInit = function () {
		const menuBtn = document.querySelector(".jsMobileMenuBtnToggle");

		// Определяем высоту мобильного меню и размещаем под шапкой
		function menuPanelPosition() {
			const heightViewport = document.documentElement.clientHeight;
			const heightHeader = document.querySelector(".header").offsetHeight;
			const heightMenuOverlay = heightViewport - heightHeader;
			let posTop = window.scrollY;

            console.log("posTop - " + posTop);
            console.log("window.scrollY - " + window.scrollY);


			const menuActive = document.querySelector(".mobile-menu.toggle");

			if (menuActive) {
				menuActive.style.height = heightMenuOverlay + "px";
				menuActive.style.top = posTop + heightHeader + "px";
			}

		}

		menuBtn.addEventListener("click", menuPanelPosition);
	};

	menuPanelInit();
}
// Показать / скрыть в мобильном меню подменю
function subMenuToggle(element) {
	const subMenuBtn = document.querySelectorAll('.mobile-menu.nav-menu__link--open-panel'); // ссылка для открытия подменю
	const navListMobile = document.querySelector('.mobile-menu__box'); // сюда будем складывать обертки подменюшек
	let zIndexValue = 100;


	// По клику на кнопку для субменю будем формировать и показывать подменю
	const subBtnClick = (e) => {

		// Формируем обертку для подменю
		const subMenuWrapper = document.createElement('div');
		zIndexValue++;
		subMenuWrapper.classList.add('nav__list'); // обертка для подменю
		subMenuWrapper.classList.add('z-index'); // обертка для подменю
		subMenuWrapper.classList.add('z-index-' + zIndexValue); // обертка для подменю
		// subMenuWrapper.classList.remove('nav__list');
		navListMobile.append(subMenuWrapper); // добавляем обртку к основному меню
		subMenuWrapper.style.zIndex = zIndexValue; // задаем z-index для слоя с подменю

		// Формируем хедер для подменю с кнопкой назад
		const subMenuHeader = document.createElement('div');
		subMenuHeader.classList.add('submenu__header'); // обертка для кноки назад
		const textForPrevLink = e.srcElement.textContent; // текст для кноки назад
		subMenuHeader.textContent = textForPrevLink;
		subMenuWrapper.append(subMenuHeader);

		// Формируем подменю
		// const newSubMenu = e.target.parentNode.cloneNode(true);
		let newSubMenu = document.createElement('div');
		let parentSubmenuList;
		if (zIndexValue == 101) {
			parentSubmenuList = '.nav__col';
		}
		if (zIndexValue == 102) {
			parentSubmenuList = '.submenu__item';
		}
		// const newSubMenuItem = e.target.parentNode.querySelectorAll('.nav__col');
		const newSubMenuItem = e.target.parentNode.querySelectorAll(parentSubmenuList);
		newSubMenuItem.forEach(element => {
			const temp = element.cloneNode(true);
			newSubMenu.append(temp);
			// newSubMenu.append(element);
		});
		subMenuWrapper.append(newSubMenu);

		// Закрываем подменю для возврата к родителю
		subMenuHeader.addEventListener("click", () => {
			setTimeout(() => { subMenuWrapper.classList.toggle('active'); }, 100); // класс, чтобы выдвигать меню
			setTimeout(() => { subMenuWrapper.remove(); }, 500); // удаляем подменю, чтобы не пложить копии
			zIndexValue--;
		});

		// subMenuWrapper.style.top = 60 + 'px'; // добавляем отступ
		// класс, чтобы выдвигать меню
		setTimeout(() => { subMenuWrapper.classList.add('active'); }, 100); // класс, чтобы выдвигать меню
	};

	// Для каждой кноппки, открывающей панель подменю, отслеживаем клик - для показа подменю второго уровня
	subMenuBtn.forEach(element => {
		element.addEventListener("click", subBtnClick);
	});

	// Для каждой кноппки, открывающей подменю, отслеживаем клик - для показа подменю третьего уровня
	let submenu3Level = document.querySelectorAll('.nav__list--mobile .nav__item--title .nav__submenu');
	submenu3Level.forEach(element => {
		let titleSubmenu3Level = element.previousElementSibling;
		// console.log(titleSubmenu3Level);
		titleSubmenu3Level.addEventListener("click", subBtnClick);
		titleSubmenu3Level.addEventListener("click", () => {
			// console.log('titleSubmenu3Level');
		});
	});


	// subMenuBtn.forEach(element => {
	// 	element.addEventListener("click", subBtnClick);
	// });
}

subMenuToggle();
window.addEventListener("resize", subMenuToggle);// -include './myscripts/burger.js'
		// -include './myscripts/form.js'
		// -include './myscripts/accordeon.js'
		// Показать / скрыть скрытый текст отзыва
if (document.querySelector(".cr-item__text-more")) {
	const textMore = document.getElementsByClassName('cr-item__text-more');
    for (let element of textMore) {
        // console.log(element);

        element.addEventListener("click", () => {
			element.parentNode.firstElementChild.classList.toggle("active");
			if (element.textContent == "Скрыть") {
				element.textContent = "Читать далее";
			} else {
				element.textContent = "Скрыть";
			};
		});
    };
};
// Инициализация слайдера swiper
// https://swiperjs.com/

// Кнопки-табы для блока "Окна Rehau по цене производителя"
function initSwiper() {
	if (document.querySelector(".our-works__slider")) {
		const prodSliderInner = new Swiper(".our-works__slider", {
			spaceBetween: 20,
			slidesPerView: 1,
			loop: true,

			pagination: {
				el: ".our-works__pagination",
				clickable: true,
			},

			navigation: {
				nextEl: ".our-works__next",
				prevEl: ".our-works__prev",
			},
		});
	};

	if (document.querySelector(".pr-slider")) {
		let menu = ["Blitz", "Grazio", "Delight", "Intelio"];

		const prodSliderInner = new Swiper(".pr-slider", {
			spaceBetween: 20,
			slidesPerView: 1,
			pagination: {
				el: ".pr-btns",
				clickable: true,
				bulletClass: "pr-btns__item",
				renderBullet: function (index, className) {
					return (
						'<span class="' +
						className +
						'">' +
						menu[index] +
						"</span>"
					);
				},
			},
		});
	};

	// Окна Rehau по цене производителя - вложенный слайдер
	if (document.querySelector(".slider-windows")) {
		const prodSliderInner = new Swiper(".slider-windows", {
			spaceBetween: 20,
			slidesPerView: 1,
			loop: true,
			disableOnInteraction: false,
			pauseOnMouseEnter: true,
			breakpoints: {
				500: {
					slidesPerView: 2,
					spaceBetween: 10,
					loop: true,
				},
				768: {
					slidesPerView: 3,
					spaceBetween: 20,
					loop: true,
				},
				1001: {
					slidesPerView: 4,
					spaceBetween: 20,
					loop: true,
				},
			},
			pagination: {
				el: ".slider-windows__pagination",
				clickable: true,
			},
			navigation: {
				nextEl: ".slider-windows__next",
				prevEl: ".slider-windows__prev",
			},
		});
	};

	// Профильные системы Rehau
	if (document.querySelector(".systems-rehau__slider")) {
		const prodSliderInner = new Swiper(".systems-rehau__slider", {
			spaceBetween: 20,
			slidesPerView: 1,
			loop: true,
			disableOnInteraction: false,
			pauseOnMouseEnter: true,
			breakpoints: {
				500: {
					slidesPerView: 2,
					spaceBetween: 10,
					loop: true,
				},
				768: {
					slidesPerView: 3,
					spaceBetween: 20,
					loop: true,
				},
				1001: {
					slidesPerView: 4,
					spaceBetween: 20,
					loop: true,
				},
			},
			navigation: {
				nextEl: ".systems-rehau__next",
				prevEl: ".systems-rehau__prev",
			},
			pagination: {
				el: ".systems-rehau__pagination",
				clickable: true,
			},
		});
	};

	// Окна Rehau по цене производителя - вложенный слайдер
	if (document.querySelector(".customer-reviews__slider")) {
		const customerReviewsSlider = new Swiper(".customer-reviews__slider", {
			spaceBetween: 10,
			slidesPerView: 1,
			loop: true,
			// disableOnInteraction: false,
			// pauseOnMouseEnter: true,
			breakpoints: {
				768: {
					slidesPerView: 2,
					spaceBetween: 20,
					loop: true,
				}
			},
			pagination: {
				el: ".customer-reviews__pagination",
				clickable: true,
			},
			navigation: {
				nextEl: ".customer-reviews__next",
				prevEl: ".customer-reviews__prev",
			},
		});
	};
};

// window.addEventListener("resize", initSwiper);
window.addEventListener("resize", function () {
	// setTimeout(initSwiper, 200);
	initSwiper();
	// swiper.init();
});

initSwiper();
// Табы. Параметры: класс для кнопок табов и класс содержимого табов
const tabsToggle = function (tabBtnClass, tabContentClass) {
	if (document.querySelector(tabBtnClass)) {
		const tabsBtn = document.querySelectorAll(tabBtnClass); // все кнопки табов
		const tabsContent = document.querySelectorAll(tabContentClass); // все содержимое табов

		// Перебираем кнопки табов, по которым можем щелкнуть
		tabsBtn.forEach(function (btn, index) {
			// Вешаем событие клика на каждую кнопку
			btn.addEventListener("click", function () {
                if (btn.classList.contains("toggle")) {
                    tabsBtn[index].classList.remove("toggle");
                    tabsContent[index].classList.remove("toggle");

				} else {
                    // у кнопки, по которой щелкнули, добавить класс активности
					tabsBtn[index].classList.add("toggle");
                    // у содержимого с этим индексом добавить класс активности
                    tabsContent[index].classList.add("toggle");
				}

			});
		});
	}
};

// tabsToggle(".footer-top__title", ".footer-menu");
tabsToggle(".footer-top__title", ".footer-top__col");
// -include './myscripts/blazy-init.js'
	}
);
